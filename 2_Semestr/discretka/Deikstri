using System;
using System.Collections.Generic;

namespace ConsoleApplication2
{
    class Program
    {
        public static void Main(string[] args)
        {
            int x = int.MaxValue;
            int[,] matrix = { {0,7,9,x,x,14},  //0
                              {7,0,10,15,x,x },//1
                              {9,10,0,11,x,2 },//2
                              {x,15,11,0,6,x}, //3
                              {x,x,x,6,0,9 },  //4
                              {14,x,2,x,9,0 }};//5
            int currentpoint = 0;
            int finishpoint = 4;

            int[] weights = new int[matrix.GetLength(0)];
            for(int i = 0; i< weights.Length; i++)
            {
                weights[i] = int.MaxValue;
            }
            weights[currentpoint] = 0;
            
            HashSet<int> visited = new HashSet<int>();

            for (int _ = 0; _ < matrix.GetLength(0); _++) 
            {
                // Находим непосещённую вершину с минимальным весом
                int minWeight = int.MaxValue;
                currentpoint = -1;
                for(int i = 0; i < weights.Length; i++)
                {
                    if (!visited.Contains(i) && weights[i] < minWeight)
                    {
                        minWeight = weights[i];
                        currentpoint = i;
                    }
                }

                if (currentpoint == -1 || currentpoint == finishpoint) break;

                visited.Add(currentpoint);

                for (int i = 0; i < matrix.GetLength(0); i++)
                {
                    if (i == currentpoint || visited.Contains(i) || matrix[currentpoint, i] == x)continue;
                    
                    if (weights[currentpoint] + matrix[currentpoint, i] < weights[i])
                    {
                        weights[i] = weights[currentpoint] + matrix[currentpoint, i];
                    }
                }
            }
            Console.WriteLine(weights[finishpoint]); // Выведет 20
        }
    }
}
