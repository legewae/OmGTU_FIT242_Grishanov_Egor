
class Program{
    public static int countNestsAlg1(int[,] matrix){
        int count = 1;
        int[] used = new int[matrix.GetLength(0)];
        used[0] = 1; //1 = использовано
        int[] unused = new int[matrix.GetLength(0)];
        unused[0] = 1; //Указывает по порядку уже использованные пути
        
        int step = 1; //Порядок заполнения unused(как бы замена append)
        for(int i = 0; i< unused.Length; i++){
            if(unused[i]==0){ //Достигли конца компонента
                count++;
                //Находим первое неиспользованое число
                for(int k = 0; k < used.Length;k++){
                    if(used[k]==0){
                        unused[i] = k+1;
                        break;
                    }
                }

            }

            //Берём путь из unused на месте i и находим ему смежные
            
            for(int j = 0; j< unused.Length; j++){
                if(matrix[unused[i]-1, j]==1 && used[j] == 0){
                    used[j] = 1;
                    unused[step] = j+1;
                    step++;
                }
            }
        }
    
        return count;
    }

    public static void Main(string[] args){
        int[,] matrix = new int[7,7]{
            {1,1,1,0,0,0,0},
            {1,1,1,0,0,0,0},
            {1,1,1,1,0,0,0},
            {0,0,1,1,0,1,0},
            {0,0,0,0,1,0,1},
            {0,0,0,1,0,1,1},
            {0,0,0,0,1,1,1}};
            Console.WriteLine(countNestsAlg1(matrix));

    }
}
